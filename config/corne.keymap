/*
 * Copyright (c) 2020 The ZMK Contributors 
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define U_MOUSE_MOVE_MAX 1500       /* <--- New max speed for mouse movement */
#define U_MOUSE_SCROLL_MAX 20    /* <--- New max speed for scrolling */

/ {
    behaviors {
        onNumpad: onNumpad {
            compatible = "zmk,behavior-tap-dance";
            label = "ONNUMPAD";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&to 4>;
        };

        offNumpad: offNumpad {
            compatible = "zmk,behavior-tap-dance";
            label = "OFFNUMPAD";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&to 0>;
        };

        reload: reload {
            compatible = "zmk,behavior-tap-dance";
            label = "RELOAD";
            #binding-cells = <0>;
            bindings = <&kp F5>, <&kp LG(LS(R))>;
        };

        esc_caps: esc_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_CAPS";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&caps_word>;
        };

        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        ctrl_globe: ctrl_globe {
            compatible = "zmk,behavior-mod-morph";
            label = "CTRL_GLOBE";
            bindings =
                <&kp LEFT_CONTROL>,
                <&kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        CMDQ {
            bindings = <&kp LG(Q)>;
            key-positions = <1 3>;
            layers = <0>;
        };

        CMDW {
            bindings = <&kp LG(W)>;
            key-positions = <2 4>;
            layers = <0>;
        };

        Globe_key {
            bindings = <&kp GLOBE>;
            key-positions = <37 24>;
        };

        newTab {
            bindings = <&kp LG(T)>;
            key-positions = <1 5>;
        };
    };

    macros {
        terminal: terminal {
            compatible = "zmk,behavior-macro";
            label = "TERMINAL";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_ALT &kp RIGHT_ALT>,
                <&macro_wait_time 200>,
                <&kp T &kp E &kp R &kp M &kp I &kp N &kp A &kp L &kp ENTER>;
        };

        code: code {
            compatible = "zmk,behavior-macro";
            label = "CODE";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp D &kp E &kp SPACE &kp DOT &kp ENTER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R        &kp T          &onNumpad    &kp U      &kp I      &kp O    &kp P     &kp BACKSLASH
&esc_caps  &kp A  &kp S  &kp D     &kp F        &kp G          &kp H        &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V        &kp B          &kp N        &kp M      &kp COMMA  &kp DOT  &kp FSLH  &mt RIGHT_SHIFT KP_EQUAL
                         &kp LGUI  &ctrl_globe  &lt 2 SPACE    &lt 1 ENTER  &bspc_del  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans     &trans  &kp C_BRIGHTNESS_INC  &kp C_PP    &kp K_MUTE        &kp LS(LC(LG(NUMBER_4)))    &kp PG_UP          &kp HOME       &kp UP     &kp END    &kp N0             &kp BSPC
&trans     &trans  &kp C_BRIGHTNESS_DEC  &kp C_NEXT  &kp C_VOLUME_UP   &kp NUBS                    &kp PAGE_DOWN      &kp LEFT       &kp DOWN   &kp RIGHT  &kp LS(C_AL_LOCK)  &kp C_SLEEP_MODE
&kp LSHFT  &trans  &trans                &kp C_PREV  &kp C_VOL_DN      &kp LEFT_BRACKET            &kp RIGHT_BRACKET  &trans         &terminal  &code      &trans             &trans
                                         &kp LGUI    &kp LEFT_CONTROL  &trans                      &trans             &kp BACKSPACE  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp N3    &kp N4       &kp N5         &kp NUMBER_6  &kp N7         &kp N8        &kp N9                &kp N0                 &kp MINUS
&kp TILDE  &kp EXCL      &kp AT_SIGN   &kp HASH  &kp DOLLAR   &kp PERCENT    &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&kp F11    &kp F1        &kp F2        &kp F3    &kp F4       &reload        &kp F6        &kp F7         &kp F8        &kp F9                &kp F10                &kp F12
                                       &kp LGUI  &lt 5 LCTRL  &trans         &trans        &kp BACKSPACE  &kp RALT
            >;
        };

        ADJUST {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        NUMPAD {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &offNumpad  &kp KP_NUMBER_7  &kp KP_N8  &kp KP_N9  &kp KP_PLUS      &kp KP_ASTERISK
&trans  &trans  &trans  &trans  &trans  &trans    &trans      &kp KP_N4        &kp KP_N5  &kp KP_N6  &kp KP_SUBTRACT  &kp KP_DIVIDE
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N0   &kp KP_N1        &kp KP_N2  &kp KP_N3  &kp KP_DOT       &trans
                        &trans  &trans  &trans    &trans      &trans           &trans
            >;
        };

        MOUSE {
            bindings = <
&none  &none  &none  &none  &none  &none    &msc SCRL_LEFT  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP    &msc SCRL_RIGHT
&none  &none  &none  &none  &none  &none    &none           &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN  &none
&none  &none  &none  &none  &none  &none    &none           &mkp MCLK       &none           &none            &none           &none
                     &none  &none  &none    &mkp LCLK       &mkp RCLK       &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        AdjustLayer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
